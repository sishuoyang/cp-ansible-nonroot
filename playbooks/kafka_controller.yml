---
- name: Kafka Controller Status Finding
  hosts: kafka_controller
  gather_facts: false
  tags: kafka_controller
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: variables

    - name: Populate service facts
      service_facts:
      when: not nonroot_deployment

    # Check for Kafka Controller process regardless of systemd or custom script
    - name: Check if Kafka Controller process is running
      ansible.builtin.shell: |
        ps aux | grep -w '[k]afka.Kafka' | grep -v 'grep' || true
      register: kafka_process_check
      ignore_errors: true
      when: nonroot_deployment

    # Set service state based on process check
    - name: Set Kafka Controller service state based on process detection
      set_fact:
        ansible_facts:
          services: "{{ ansible_facts.services | default({}) | combine({ (kafka_controller_service_name + '.service'): { 'state': 'running' if kafka_process_check.stdout else 'stopped' } }) }}"
      when: nonroot_deployment

    - name: Show Kafka Controller service state based on process detection
      debug:
        msg: "State: {{ ansible_facts.services}}"

    - name: Determine Installation Pattern - Parallel or Serial
      set_fact:
        install_pattern: "{{ 'parallel' if service_state != 'running' or kafka_controller_deployment_strategy == 'parallel' else 'serial' }}"
      vars:
        service_state: "{{ ansible_facts.services[kafka_controller_service_name + '.service'].state | default('unknown') }}"

    - name: Group Hosts by Installation Pattern
      group_by:
        key: kafka_controller_{{install_pattern}}
      changed_when: false

- name: Kafka Controller Parallel Provisioning
  hosts: kafka_controller_parallel
  gather_facts: false
  tags: kafka_controller
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: kafka_controller

- name: Kafka Controller Serial Provisioning
  hosts: kafka_controller_serial
  gather_facts: false
  serial: 1
  tags: kafka_controller
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: kafka_controller
